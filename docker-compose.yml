

  version: '3'
services:
  mysql:
    image: mysql:latest
    container_name: mysqldb
    ports:
      - "3306:3306"  # Map host port 3306 to container port 3306
    environment:
      MYSQL_DATABASE: mysql
    volumes:
      - ./data.sql:/docker-entrypoint-initdb.d/data.sql
    networks:
      - docker-network

  spring:
    image: iskander20/devopsproject:backapp
    container_name: spring-back-project
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mysql-db?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
    depends_on:
      mysql
    networks:
      - my-network
    volumes:
      - ./backend-data:/app/data

  angular:
    image: iskander20/devopsproject:frontapp
    container_name: angular-front-project
    ports:
      - "80:80"
    depends_on:
      - spring
    networks:
      - my-network
    volumes:
      - ./frontend-data:/app/dist

networks:
  my-network:










version: '3.8'
services:
  mysql:
    image: mysql:latest
    container_name: mysqldb
    ports:
      - "3333:3306"  # Map port 3333 on the host to port 3306 on the container
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: devops
    networks:
      - docker-net
    volumes:
      - /home/ghazi/Desktop/DB:/var/lib/mysql
    
  
  backend:
    depends_on:
      - mysql
    image: ghazi11/back1
    build: .
    ports:
      - "8082:8080"  # Map port 8081 on the host to port 8080 on the container
    networks:
      - docker-net
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_PORT: 3306

  frontend:
    image: ghazi11/frant
    networks:
      - docker-net
    ports:
      - "80:80"  # Map port 80 on the host to port 80 on the container

networks:
  docker-net:
